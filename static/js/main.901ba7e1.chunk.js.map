{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varaint","start","value","end","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","event","target","index","key","App","state","fetchedData","setState","this","image","src","alt","Chart","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,4NCoEpJC,EA9DD,SAAC,GAA4D,IAAD,IAAzDC,KAAQC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,WAErD,OAAKH,EAKH,yBAAKI,UAAWC,IAAOC,WACrB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAClC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,WAC3E,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAElB,kBAAC,IAAD,CACEC,MAAOvB,EAAUwB,MAAM,GAAIxB,EAAUwB,MACrCC,IAAKzB,EAAUwB,MACfE,SAAU,EACVC,UAAU,OAGd,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAGJ,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOJ,YAC3E,kBAACiB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAElB,kBAAC,IAAD,CACEC,MAAOtB,EAAUuB,MAAM,IACvBC,IAAKxB,EAAUuB,MACfE,SAAU,EACVC,UAAU,OAGd,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,4CAGJ,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOH,SAC3E,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAElB,kBAAC,IAAD,CACEC,MAAOrB,EAAOsB,MAAM,IACpBC,IAAKvB,EAAOsB,MACZE,SAAU,EACVC,UAAU,OAGd,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,2CAnDD,c,yBCRLQ,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACnBC,EAAgBJ,EAEjBE,IACDE,EAAa,UAAMJ,EAAN,sBAAuBE,IAJf,kBAQgDG,IAAMC,IAAIF,GAR1D,2BAQbnC,KAAQC,EARK,EAQLA,UAAWC,EARN,EAQMA,UAAWC,EARjB,EAQiBA,OAAQC,EARzB,EAQyBA,WARzB,kBAUd,CACLH,YACAC,YACAC,SACAC,eAdmB,kCAkBrBkC,QAAQC,IAAR,MAlBqB,0DAAH,sDAsBTC,EAAc,uCAAG,gCAAAN,EAAA,+EAEHE,IAAMC,IAAN,UAAaN,EAAb,WAFG,uBAElB/B,EAFkB,EAElBA,KAERsC,QAAQC,IAAIvC,GAENyC,EAAezC,EAAK0C,KAAI,SAACC,GAAD,MAAgB,CAC5C1C,UAAW0C,EAAU1C,UAAU2C,MAC/BzC,OAAQwC,EAAUxC,OAAOyC,MACzB1C,UAAWyC,EAAUzC,UAAU0C,MAC/BC,KAAMF,EAAUG,eAVQ,kBAanBL,GAbmB,kCAe1BH,QAAQC,IAAR,MAf0B,0DAAH,qDAmBdQ,EAAc,uCAAG,8BAAAb,EAAA,+EAEYE,IAAMC,IAAN,UAAaN,EAAb,eAFZ,uBAEViB,EAFU,EAElBhD,KAAQgD,UAFU,kBAInBA,EAAUN,KAAI,SAACT,GAAD,OAAaA,EAAQgB,SAJhB,gCAO1BX,QAAQC,IAAR,MAP0B,yDAAH,qD,yBCiCZW,EAxEA,SAAC,GAAuD,IAAD,IAApDlD,KAAOC,EAA6C,EAA7CA,UAAWE,EAAkC,EAAlCA,OAAQD,EAA0B,EAA1BA,UAAY+B,EAAc,EAAdA,QAAc,EAClCkB,mBAAS,IADyB,mBAC7DR,EAD6D,KAClDS,EADkD,KAGpEC,qBAAU,YACM,uCAAG,sBAAAnB,EAAA,kEACfkB,EADe,SACIZ,IADJ,6EAAH,qDAIdc,KACC,IAEH,IAAMC,EACJZ,EAEI,kBAAC,IAAD,CACE3C,KAAM,CACJwD,OAAQb,EAAUD,KAAI,qBAAGG,QACzBY,SAAU,CAAC,CACTzD,KAAM2C,EAAUD,KAAI,qBAAGzC,aACvByD,MAAO,WACPC,YAAa,OACbC,MAAM,GACL,CACD5D,KAAM2C,EAAUD,KAAI,qBAAGxC,aACvBwD,MAAO,YACPC,YAAa,OACbE,gBAAiB,oBACjBD,MAAM,GACL,CACD5D,KAAM2C,EAAUD,KAAI,qBAAGvC,UACvBuD,MAAO,SACPC,YAAa,OACbE,gBAAiB,oBACjBD,MAAM,OAIV,KAGFE,EACJ7D,EAEI,kBAAC,IAAD,CACED,KAAM,CACJwD,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CAAC,CACTC,MAAO,SACPG,gBAAiB,CACf,oBACA,oBACA,qBAEF7D,KAAM,CAACC,EAAUwB,MAAOvB,EAAUuB,MAAOtB,EAAOsB,UAGpDsC,QAAS,CACPC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAsBlC,OAIpD,KAGR,OACE,yBAAK5B,UAAWC,IAAOC,WACpB0B,EAAU6B,EAAWP,I,mCC9Cba,EApBO,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,oBAAuB,EACGlB,mBAAS,IADZ,mBACtCmB,EADsC,KACpBC,EADoB,KAU7C,OAPAlB,qBAAU,YACM,uCAAG,sBAAAnB,EAAA,kEACfqC,EADe,SACWxB,IADX,6EAAH,qDAIdO,KACC,CAACiB,IAEF,kBAACC,EAAA,EAAD,CAAanE,UAAWC,IAAOmE,aAC7B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAWR,EAAoBQ,EAAMC,OAAOrD,SAClF,4BAAQA,MAAM,IAAd,UACC6C,EAAiB5B,KAAI,SAACT,EAAS8C,GAAV,OAAkB,4BAAQC,IAAKD,EAAOtD,MAAOQ,GAAUA,S,kCC8BtEgD,E,4MArCbC,MAAQ,CACNlF,KAAM,GACNiC,QAAS,I,EAaXoC,oB,uCAAsB,WAAMpC,GAAN,eAAAC,EAAA,sEAEMF,EAAUC,GAFhB,OAEdkD,EAFc,OAKpB,EAAKC,SAAS,CAACpF,KAAKmF,EAAalD,QAASA,IALtB,2C,wPAPMD,I,OAApBmD,E,OAENE,KAAKD,SAAS,CACZpF,KAAMmF,I,qIAYA,IAAD,EACaE,KAAKH,MAAtBlF,EADI,EACJA,KAAMiC,EADF,EACEA,QAET,OACE,yBAAK5B,UAAWC,IAAOC,WACrB,yBAAKF,UAAWC,IAAOgF,MAAOC,IAAKD,IAAOE,IAAI,aAC9C,kBAAC,EAAD,CAAOxF,KAAMA,IACb,kBAAC,EAAD,CAAeqE,oBAAqBgB,KAAKhB,sBACzC,kBAACoB,EAAD,CAAOzF,KAAMA,EAAMiC,QAASA,S,GAjClByD,IAAMC,WCPxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCJjDlG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCDhCD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.901ba7e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1Cqu_\",\"card\":\"Cards_card__3fHq7\",\"infected\":\"Cards_infected__3UaWr\",\"recovered\":\"Cards_recovered__3BzkZ\",\"deaths\":\"Cards_deaths__3QrsU\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\r\n  if (!confirmed) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n            <Typography varaint=\"h5\">\r\n              \r\n              <CountUp\r\n                start={confirmed.value-0.5*confirmed.value}\r\n                end={confirmed.value}\r\n                duration={1.0}\r\n                separator=\",\" />\r\n              \r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography varaint=\"body2\">Number of active cases of COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n            <Typography varaint=\"h5\">\r\n              \r\n              <CountUp\r\n                start={recovered.value-500}\r\n                end={recovered.value}\r\n                duration={1.0}\r\n                separator=\",\" />\r\n              \r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography varaint=\"body2\">Number of recoveries cases of COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n            <Typography varaint=\"h5\">\r\n              \r\n              <CountUp\r\n                start={deaths.value-5000}\r\n                end={deaths.value}\r\n                duration={1.0}\r\n                separator=\",\" />\r\n              \r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography varaint=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if(country){\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    }\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    console.log(data)\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      recovered: dailyData.recovered.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Charts = ({ data: {confirmed, deaths, recovered}, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = (\r\n    dailyData\r\n      ? (\r\n        <Line\r\n          data={{\r\n            labels: dailyData.map(({ date }) => date),\r\n            datasets: [{\r\n              data: dailyData.map(({ confirmed }) => confirmed),\r\n              label: 'Infected',\r\n              borderColor: '#66a',\r\n              fill: true,\r\n            }, {\r\n              data: dailyData.map(({ recovered }) => recovered),\r\n              label: 'Recovered',\r\n              borderColor: '#3f3',\r\n              backgroundColor: 'rgba(0,255,0,0.5)',\r\n              fill: true,\r\n            }, {\r\n              data: dailyData.map(({ deaths }) => deaths),\r\n              label: 'Deaths',\r\n              borderColor: '#f33',\r\n              backgroundColor: 'rgba(255,0,0,0.5)',\r\n              fill: true,\r\n            }],\r\n          }}\r\n        />\r\n      ) : null\r\n  );\r\n\r\n  const barChart = (\r\n    confirmed\r\n      ? (\r\n        <Bar\r\n          data={{\r\n            labels: ['Infected', 'Recovered', 'Deaths'],\r\n            datasets: [{\r\n              label: 'People',\r\n              backgroundColor: [\r\n                'rgba(0,0,200,0.5)',\r\n                'rgba(0,200,0,0.5)',\r\n                'rgba(200,0,0,0.5)',\r\n              ],\r\n              data: [confirmed.value, recovered.value, deaths.value]\r\n            }]\r\n          }}\r\n          options={{\r\n            legend: { display: false },\r\n            title: { display: true, text: `Current state in ${country}` },\r\n\r\n          }}\r\n        />\r\n      ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Charts;","import React, { useState, useEffect } from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange})=>{\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    const fetchAPI = async()=>{\r\n      setFetchedCountries(await fetchCountries());\r\n    }\r\n\r\n    fetchAPI();\r\n  }, [setFetchedCountries])\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(event) => handleCountryChange(event.target.value)}>\r\n        <option value=''>Global</option>\r\n        {fetchedCountries.map((country, index)=><option key={index} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\n// import Cards from './components/Cards/Cards';\r\n// import Chart from './components/Chart/Chart';\r\n// import CountryPicker from './components/CountryPicker/CountryPicker';\r\n\r\nimport {Cards, Chart, CountryPicker} from './components'\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\nimport image from './images/image.png';\r\n\r\nclass App extends React.Component{\r\n\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n\r\n  }\r\n\r\n\r\n  async componentDidMount(){\r\n    const fetchedData = await fetchData();\r\n\r\n    this.setState({\r\n      data: fetchedData\r\n    });\r\n  }\r\n\r\n  handleCountryChange = async(country)=>{\r\n    // fetch data\r\n    const fetchedData = await fetchData(country);\r\n\r\n    // set state\r\n    this.setState({data:fetchedData, country: country});\r\n  }\r\n\r\n  render() {\r\nconst {data, country} = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__21vK5\",\"image\":\"App_image__tvUSX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__PDmzw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3OR0a\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}